file_list <- c("data_2014.txt", "data_2015.txt", "data_2016.txt", "data_2017.txt", 
               "data_2018.txt", "data_2019.txt", "data_2020.txt", "data_2021.txt")
years <- c(2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021)  #years vector
modified_data_list <- list()
for (i in 1:length(file_list)) {
  data <- read.csv(file_list[i], header = FALSE)
  
  if(ncol(data) != 2) { # in case data is missing values
    print("Error detected in file" + file_list[i] + "!")
  }
  
  data$Year <- years[i]
  colnames(data) <- c("Result", "Name", "Year")
  modified_data_list[[i]] <- data
}
combined_data <- do.call(rbind, modified_data_list)
combined_data <- combined_data |>
  mutate(Result = case_when(
    Result == 1 | Result == 2 ~ "Final",
    Result == 3 | Result == 4 ~ "Conference Final",
    Result >= 5 & Result <= 8 ~ "Round 2",
    Result >= 9 & Result <= 16 ~ "Round 1"
  ))
combined_data


library(dplyr)
win_list <- c("wins_2014.txt", "wins_2015.txt", "wins_2016.txt", "wins_2017.txt", 
              "wins_2018.txt", "wins_2019.txt", "wins_2020.txt", "wins_2021.txt")
years <- c(2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021)
modified_win_list <- list()
for (i in 1:length(win_list)) {
  windata <- read.csv(win_list[i], header = FALSE)
  if (ncol(windata) == 2) {
    windata$Year <- years[i]
    colnames(windata) <- c("Name", "Wins", "Year")
    modified_win_list[[i]] <- windata
  }
}
combined_wins <- do.call(rbind, modified_win_list)
combined_wins <- combined_wins |>
  filter(grepl("\\*", Name)) |>
  mutate(Name = gsub("\\*$", "", Name))
print(combined_wins)

team_lookup <- data.frame(
  Team = c("San Antonio Spurs", "Oklahoma City Thunder", "Miami Heat", "Indiana Pacers",
           "Los Angeles Clippers", "Portland Trail Blazers", "Brooklyn Nets", "Washington Wizards",
           "Golden State Warriors", "Dallas Mavericks", "Memphis Grizzlies", "Toronto Raptors",
           "Houston Rockets", "Atlanta Hawks", "Chicago Bulls", "Charlotte Hornets",
           "Cleveland Cavaliers", "Boston Celtics", "Detroit Pistons", "Milwaukee Bucks",
           "New Orleans Pelicans", "Sacramento Kings", "Los Angeles Lakers", "Philadelphia 76ers",
           "Minnesota Timberwolves", "Utah Jazz", "Denver Nuggets", "New York Knicks", "Phoenix Suns", "Orlando Magic", "Charlotte Bobcats"),
  abbreviation = c("SAS", "OKC", "MIA", "IND", "LAC", "POR", "BKN", "WAS", "GSW", "DAL", "MEM",
                   "TOR", "HOU", "ATL", "CHI", "CHA", "CLE", "BOS", "DET", "MIL", "NOP", "SAC",
                   "LAL", "PHI", "MIN", "UTA", "DEN", "NYK", "PHO", "ORL", "CHB"), 
  Conference = c("West", "West", "East", "East", "West", "West", "East", "East", "West", "West", "West", "East", "West", "East", "East", "East", "East", "East", "East", "East", "West", "West", "West", "East", "West", "West", "West", "East", "West", "East", "East")
)

combined_wins <- combined_wins |>
  left_join(team_lookup, by = c("Name" = "Team")) |>
  mutate(Name = abbreviation) |>
  select(-abbreviation)
print(combined_wins)

combined_data <- combined_data |>
  left_join(team_lookup, by = c("Name" = "Team")) |>
  mutate(Name = abbreviation) |>
  select(-abbreviation)
print(combined_data)

combined_data <- combined_data |>
  transform(Name_Year = paste(Name, Year, sep = "_")) |>
  select(-Name, -Year)  # Remove the Name and Year columns
combined_data

combined_wins <- combined_wins |>
  transform(Name_Year = paste(Name, Year, sep = "_")) |>
  select(-Name, -Year)  # Remove the Name and Year columns

WAR <- read.csv("C:/Users/swara/Downloads/WAR.csv")
WAR <- subset(WAR, war_reg_season != 0)
combined_WAR <- WAR |>
  transform(Name_Year = paste(team, year, sep = "_")) |>
  select(-team, -year)  # Remove the Name and Year columns
combined_WAR
combined_WAR <- combined_WAR |>
  group_by(Name_Year) |>
  summarise(Average_WAR = mean(war_reg_season, na.rm = TRUE))
combined_WAR

combined_result <- merge(combined_wins, combined_data, by = "Name_Year")
combined_result
combined_result <- combined_result[, c("Name_Year", "Result", "Wins", "Conference.x")]
finaldata <- merge(combined_result, combined_WAR, by = "Name_Year")
finaldata

# Incorporate True Shooting
ts_data <- read.csv("C:/Users/swara/Downloads/TS.csv")  #adjust file path
ts_data <- ts_data |>
  mutate(Team = gsub("\\*$", "", Team)) |>  # Remove asterisks from Team names
  left_join(team_lookup, by = "Team")  # Add abbreviations from team_lookup

# Extract Abbreviation and Year from Name_Year in finaldata
finaldata <- finaldata |>
  mutate(
    Abbreviation = sub("_.*$", "", Name_Year),  # Extract abbreviation
    Year = as.numeric(sub(".*_", "", Name_Year))  # Extract year
  )
finaldata
# Merge TS% into finaldata
finaldata <- finaldata |>
  left_join(ts_data |> select(abbreviation, Year, TS.), 
            by = c("Abbreviation" = "abbreviation", "Year" = "Year")) |>
  rename(True_Shooting_Percentage = TS.)

finaldata <- finaldata |>
  mutate(Abbreviation = sub("_.*$", "", Name_Year)) 
finaldata
library(dplyr)

finaldata <- finaldata |>
  left_join(team_lookup |> select(abbreviation, Conference), 
            by = c("Abbreviation" = "abbreviation"))
# Drop unnecessary columns
finaldata <- finaldata |>
  select(-Abbreviation, -Year, -Conference.x)
finaldata <- finaldata[!duplicated(finaldata$Name_Year), ]
finaldata <- finaldata[-30, ]
finaldata


#Doing Random Forest
install.packages("randomForest")
install.packages("caret")
library(randomForest)
library(caret)

combined_df <- finaldata
ntree_values <- c(5, 10, 15, 20)
combined_df$Result <- as.factor(combined_df$Result)

rf_results <- list()
for (ntree in ntree_values) {
  rf_model <- randomForest(Result ~ Average_WAR + Wins + True_Shooting_Percentage + Conference, data = combined_df, ntree = ntree)
  rf_results[[paste("ntree", ntree, sep = "_")]] <- rf_model
}
lapply(rf_results, function(model) model$err.rate)


rf_grid <- expand.grid(mtry = c(1, 2, 3, 4))
control <- trainControl(method = "cv", number = 10)
caret_results <- list()

for (ntree in ntree_values) {
  rf_model <- train(
    Result ~ Wins,
    data = combined_df,
    method = "rf",
    tuneGrid = rf_grid,
    trControl = control,
    ntree = ntree
  )
  caret_results[[paste("ntree", ntree, sep = "_")]] <- rf_model
}

lapply(caret_results, function(x) x$results)
